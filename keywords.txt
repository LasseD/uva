P100.java: The 3n + 1 problem (Skiena)
brute force

P101.java: The Blocks Problem
brute force, simulation

P102.java: Ecological Bin Packing
reverse search

P103.java: Stacking Boxes
Longest increasing subsequence. O(n^2) algorithm fast enough. Warning: Test input with blank lines in judge!

P104.java: Arbitrage
Floyd-Warshall

P105.java: The Skyline Problem
skyline

P106.cpp: Fermat vs Pythagoras
Generate all primitive and non-primitive pythagorean tripples by the formula (a,b,c) = k*(m^2-n^2, 2nm, m^2+n^2), GCD(n,m)=1, k=1,2,...

P107.java: The Cat in the Hat
quick pow

P108.java: Maximum Sum
2D max sum

P109.java: SCUD Buster
ch, ch contains, ch area

P110.java: Meta-Loopless Sorts
comparison tree computation

P111.cpp
dp, length of longest increasing subsequence, n^2 non-optimal implementation

P112.cpp: Tree Summing
dfs, tree parsing, lisp

P113.java: Power of Cryptography
binary search, biginteger, speed up binary search

P114.cpp: Simulating Wizardry
ad hoc, grid, simulation, stepping, pinball, bumper

P115.cpp Climbing Trees
Use P115x, simple tree structure, ad hoc

P116.cpp: Unidirectional TSP (Skiena)
tsp, dp, lexicographical backtracking

P117.cpp: The Postal Worker Rings Once
graph traversal, sssp, even degree graph trick

P118.cpp: Mutant Flatworld Explorers
simulation

P119.cpp: Greedy Gift Givers
count in map

P120.cpp: Stack of Flapjacks (Skiena)
array sort, greedy

P121.cpp: Pipe Fitters
circle packing, geometry

P122.cpp: Trees on the level
binary tree, tree traversal, bfs

P123.cpp: Searching Quickly
getline, split string on space, line to string, multimap

P124.cpp: Following orders
alphabet, np solution, all strings search, relationship propagation

P125.java: Numbering Paths
distinct path counting in graph, cycle detection

P126.cpp The Errant Physicist
polygon multiplication, getline, stringbuffer, set erase insert

P127.cpp: "Accordian" Patience
ostream << debugging, ad hoc

P128.cpp: Software CRC
gets. printf width precision and prefix 0, warning about handling, Shift byte and mod rules, RSA 

P129.cpp: Krypton Factor
Duplicate detection in strings, counting strings, no duplicate substrings, no aa, char* '\0' set.

P130.cpp: Roman Roulette
ad hoc, simulation

P131.cpp: The Psychic Poker Player
<< ostream on std::pair, byte mapping, card typedefs, read cards

P132.cpp: Bumpy Objects
Convex hull, CH, rightturn, leftturn, colinear, point above line, 

P133.cpp: The Dole Queue
ad hoc, simulation, decimal printf 3 wide

P134.cpp: Loglan-A Logical Language
std::istringstream >> string, grammar parser, vowel, string find, npos

P136.java: Ugly Numbers
Precompute

P137.cpp: Polygons
TODO WA

P138.java: Street Numbers
brute force

P139.cpp: Telephone Tangles
printf string left justify, printf negative offset

P140.cpp: Bandwidth
Compute permutations in alphabetical order, permutation handler, bandwidth, char array, reverse char lookup, max, abs, getline to string, read line as string, printf of chars, printf of ints

P141.cpp: The Spot Game
custom bitvector implementation for 2D board up to 64x64, operator[], operator<, mask bit, rotate x y

P143.cpp: Orchard Trees
operator<,<<,+,-,*,/, exact calculations, gcd, fraction calculations

P144.cpp: Student Grants
Simulation of queue

P145.cpp: Gondwanaland Telecom
sstream to tokenize string and int, constant int array defined

P146.cpp: ID Codes
next in lexicographic order

P147.cpp: Dollars
read double as 100*int, combinations of currency

P148.cpp: Anagram Checker
sstream(string) -> strings, alphabet counting, algorithm sort

P149 Forests
<< ostream on struct, angle using asin, interval scanning, interval checking

P151.cpp: Power Crisis
simulation, walk in bool array

P152.cpp: Tree's a Crowd
dist in 3D, quick sqrt lookup

P153.cpp: Permalex
factorial, prime factorization of factorials like 160 but as a function, factoral with division, count permutations, compute lexicographical order

P154.cpp: Recycling
ad hoc, algorithm sort on vector, simple comparison.

P155.cpp: All Squares
ad hoc.

P156.cpp: Ananagrams
apply tolower, sort letters in string

P160.cpp: Factors and Factorials
factorial prime factorization, aligned printf, primes up to 100, define 

P162.cpp: Beggar My Neighbour
card game simulation. typedef pair -> SUIT VAL

P165.cpp: Stamps
Combinations of stamps, exponential time algorithm

P167.cpp: The Sultan's Successors
chess board queen cover, easy permutation handler usage of size 8, print chess board

P170.cpp: Clock Patience
suit -> int mapping, simulation, card game, read cards

P173.cpp: Network Wars
Simulation, graph walk, std::cin to std::string, parse ; : syntax

P179.cpp: Code Breaking
permutation handler with variable size, sort partial string, default char string construction.

P181.cpp: Hearts
Switch case default

P184.cpp: Laser Lines
colinear points, << ostream std::pair<int,int>, std::sort, allocate lookup arrays

P190.cpp: Circle Through Tree Points
tangents, intersection between lines - not line segments, nan avoidance, print char, circle equations

P191.cpp: Intersection
rectangle line intersection, line line intersection, colinear, rightturn

P195.cpp Anagram
Compute permutations in alphabetical order, permutation handler, std::sort with custom comparison

P200.cpp: Rare Order
topo sort, extending partial order to total order, lex compare

P218.java: Moth Eradication
ch

P231.cpp: Testing the CATCHER
longestIncreasingSubsequence, Longest Increasing Subsequence

P256.cpp: Quirksome Squares
printf n wide with leading 0's.

P264: Count the Cantor
Triangle of fractions.

P272 TEX Quotes
Trivial std::cin.getline(line,len).

P280.cpp: Vertex
Graph unreachable, adjacency lists

P291.java: The House of Santa Claus
string check

P294.cpp: Divisors
Prime sieve on bitset, prevPrime, nextPrime, numberOfDivisors, isPrime, number with most divisors.

P299.cpp: Train Swapping
Trivial, dumb brute force counting.

P305.cpp: Joseph
Precompute.

P315.cpp: Network
DFS, find critical nodes in graph, Edge-list presentation, std::stringstream line to ints

P324.java: Factorial Frequencies
Biginteger, factorials, count characters in string.

P336.cpp: A Node Too Far
All pair shortest path in arbitrary graph. Floyd-Warshall.

P340.cpp: Master-Mind Hints
Compute master mind game score.

P344.cpp: Roman Digititis
Comput roman digits up to 100.

P348.cpp: Optimal Array Multiplication Sequence
Exhaustive search ways to order multiplications.

P349.cpp: Graph Connectivity
Count connected components.

P350.cpp: Pseudo-Random Numbers
Find length of loop using Floyd's cycle finding algorithm.

P352.cpp: The Seasonal War
Read line as int. Union find.

P357.cpp: Let Me Count The Ways
Combinations of currency down to 1 cent. Up to 30000 cents.

P361.java: Cops and Robbers
ch, ch contains point

P369.cpp: Combinations
N choose M, N choose K, Binomial coefficient.

P371.cpp: Ackermann Functions
3n+1 problem, use array to pre-compute.

P374.cpp: Big Mod
a^b mod c for big a, b.

P382.cpp: Perfection
Find divisors.

P386.java: Perfect Cubes
reuse computations

P389.cpp: Basically Speaking
Convert in to any base, std::cin >> std::hex input read (can take both with and without 0x first)

P392.cpp: Polynomial Showdown
Format a polynomial for printing.

P400.cpp: Unix ls
read int and string.

P401.cpp: Palindromes
Check palindrome, check mirrored palindrome.

P406.cpp: Prime Cuts
Uses prime sieve and lists primes.

P408.cpp: Uniform Generator
Trivial simulation.

P409.cpp: Excuses, Excuses!
replace_if to transform chars in string

P412.cpp: Pi
GCD on int.

P414.cpp: Machined Surfaces
Read line as int, read line as char[].

P417: Word Index
Dumb brute force.

P424.java: Integer Inquery
BigInteger parse from string, add, ZERO.

P438.cpp: The Circumference of the Circle
tangents, intersection between lines, nan avoidance, radius and circomference of circle through 3 points.

P439.cpp: Knight Moves
Chess board knight move buildup

P440.cpp: Eeny Meeny Moo
Precompute.

P441.cpp: Lotto
Ways to choose k elements of set of size n. No permutation handler.

P442.cpp: Matrix Chain Multiplication
Parse parenthesis expression and compute from resulting tree. Matrix multiplication elementary opretaion counting.

P443.cpp: Humble Numbers
Humble number generation: Generate numbers with given prime factors.

P444.cpp: Encoder and Decoder
<algorithm> reverse on char*

P445.cpp: Marvelous Mazes
Trivial maze decoding.

P446.cpp: Kibbles "n" Bits "n" Bits "n" Bits
ANSI C scanf fom int, hex, and string, print binary.

P455.cpp: Periodic Strings
Read int from char[], gets.

P458.cpp: The Decoder
Character substitution. gets => '\0' to be checked. printf("%s\n", s);

P465.cpp: Overflow
Signed in overflow detection.

P476.cpp: Points in Figures: Rectangles
std::cin >> char >> double, quick delta compare.

P477.cpp: Points in Figures: Rectangles and Circles
std::cin >> char >> double, quick delta compare, point in rectangle, point in circle.

P478.cpp: Points in Figures: Rectangles, Circles, Triangles
rightTurn and colinear for doubles, check point in triangle.

P481.cpp: What Goes Up
Longest increasing subsequence. nlogn algorithm. Both strongly increasing and simply increasing (with duplicates)

P482.cpp: Permutation Arrays
std::cin to read line as std::string, std::stringstream to read ints and strings from string (As in StringTokenizer).

P483.cpp: Word Scramble
string parse, letter swapping

P484.cpp: The Department of Redundancy Department
Count duplicates and preserve order using two vectors and a map.

P485.java: Pascal's Triangle of Death
Brute force

P488.cpp: Triangle Wave
Trivial, but PDF is wrong. UVA contacted.

P489.cpp: Hangman Judge
Read line as signed int. Count letters in string. gets.

P490.cpp: Rotating Sequences
get strings out of a matrix

P492.cpp: Pig-Latin
getchar, putchar for single character handling. printf("%c",c), scanf("%c") != EOF.

P494.cpp: Kindergarden Counting Game
Trivial wc for words isprint isalpha.

P495.java: Fibonacci Freeze
Fibonacci numbers up to 5000, BigInteger.

P499.cpp: What's The Frequency
Count letters in string, gets, isalpha, vector sort of pairs.

P514.cpp: Rails
Trivial stack and vector.

P516.cpp: Prime Land
Prime sieve, nextPrime, isPrime, prevPrime, prime factorization top down. Read all ints on line using gets.

P524.cpp: Prime Ring Problem
Permutation handler with custom size. All primes up to 32.

P530.cpp: Binomial Showdown
Binomial as smaller product. n|k = n|n-k.

P532.cpp: Dungeon Master
BFS in 3D matrix. Vector3 implementation, operator==.

P536.cpp: Tree Recovery
Find post order traversal given inorder and preorder.

P537.cpp: Artificial Intelligence?
Parse double from char*.

P541.cpp: Error Correction
Trivial bit counting of matrix.

P543.cpp: Goldbach's Conjecture
Generate primes using prime sieve.

P558.cpp: Wormholes
Bellman-Ford to detect negative weight cycles. int limits max value.

P562.cpp: Dividing coins
Dynamic programming to select best subset with sum less than given amount.

P567.cpp: Risk
all pair shortes path

P568.cpp: Just the Facts
Last digit of the first 10000 factorials. Assume all digits don't zero.

P572.cpp: Oil Deposits
Union find on 100 x 100 grid. Read line as two ints.

P573.cpp: The Snail
Trivial snail climb simulator.

P574.cpp: Sum It Up
Simple permutation run.

P575.cpp: Skew Binary
Trivial binary eval with last digit up to 2.

P579.cpp: Clock Hands
Easy angle between clock arms, no trigonometry.

P583.cpp: Prime Factors
Uses prime sieve, nextPrime, factorize up to 2^32.

P591.cpp: Box of Bricks
Trivial

P594.cpp: One Little, Two Little, Three Little Endians
Little to big endian conversion.

P612.cpp: DNA Sorting
read ints and strings as char* to std::string, count inversions.

P621.cpp: Secret Research
Trivial

P623.java: 500!
BigInteger multiply by valueOf int, factorials up to 1000.

P624.cpp: CD
Dynamic programming to select best subset with sum less than given amount. Backtrack.

P640.c: Self Numbers
bool array in ANSI c.

P661.cpp: Blowing Fuses
Trivial simulation.

P673.cpp: Parentheses Balancing
Using a stack to check parentheses.

P674.cpp: Coin Change
Copy of P147 Dollars, atoi

P681.java: Convex Hull Finding
ch

P686.cpp: Goldbach's Conjecture (II)
Find primes up to 2^15 using already found primes.

P694.cpp: The Collatz Sequence
Trivial algorithm simulation.

P706.cpp: LCD Display
Output as LCD display.

P713.cpp: Adding Reversed Numbers
std::cin >> int and char[].

P725.cpp: Division
Find all pairs abcde/fghij=N, PH<int>

P729.cpp: The Hamming Distance Problem
Print all n choose k combinations of binary ints with x ones.

P793.cpp: Network Connections
die(), dumb union-find, paranoid parsing.

P820.cpp: Internet Bandwidth
Edmonds-Karp max flow algorithm: BFS. Residual flow graph.

P821.cpp: Page Hopping
All pair shortest paths in directed graph.

P834.cpp: Continued Frations
Transform rational number to continued fraction. Simple math.

P843.cpp: Crypt Kicker (Skiena)
Read lines, parse to int, parse to string, parse to tokens, substitution cipher.

P846.cpp: Steps
Step latter computation.

P847.cpp: A Multiplication Game
Game simulation.

P850.cpp: Crypt Kicker II (Skiena)
Substitution cipher

P897.cpp: Anagrammatic Primes
Prime sieve, bitset and permutation handler of variable size on ints.

P900.cpp: Brick Wall Patterns
Fibonacci numbers up to 50.

P913.cpp: Joana and the Odd Numbers
Count number of odds numbers written by Joana.

P914.cpp: Jumping Champion
Prime sieve, extended nextPrime, extended prevPrime, isPrime, gaps between primes.

P993.cpp: Product of digits
GIven N, find number where N is product of digits of number.

P1124.c: Celebrity jeopardy
Trivial gets puts.

P1225.cpp: Digit Counting
Cache counted digits.

P1585.cpp: Score
Trivial score counting in string

P1644.cpp: Prime Gap
Prime sieve, bitset, nextPrime, prevPrime, isPrime, prime walk.

P10000.cpp: Longest Paths
Longest path in graph. All edge weights 1.

P10002.cpp: Center of Masses
BEST, ch, ch center of mass

P10003.cpp: Cutting Sticks
Computing all sub solutions. Brute force dynamic programming.

P10004.cpp: Bicoloring
Simple graph traversal.

P10006.cpp: Carmichael Numbers
Trivial after precomputation.

P10008.cpp: What's Cryptanalysis?
sort pair, isprint for proper printable char detection

P10010.cpp: Where's Waldorf
General trie construction and queries.

P10013.cpp: Super long sums
Read digits to shorts.

P10018.cpp: Reverse and Add
palindrome check for int, int to digit array.

P10019.cpp: Funny Encryption Method
Interpret int as hex, reverse decimal int, count bits.

P10026.cpp: Shoemaker's Problem
Sort by time/fine.

P10034.cpp: Freckles
Minimum spanning tree of points in plane.

P10035.cpp: Primary Arithmetic (Skiena)
Trivial carry counting

P10037.cpp: Bridge (Skiena)
Pass the torch, sort

P10038.cpp: Jolly Jumpers (Skiena)
Sort array

P10041.cpp: Vito's Damily (Skiena)
Trivial array sort, stream for sum

P10048.cpp: Audiophobia
All pair shortest path with MAX relaxation function. Floyd-Warshall.

P10050.cpp: Hartals
Trivial simulation.

P10055.cpp: Hashmat the Brave Warrior
abs

P10062.cpp: Tell me the frequencies!
Count characters in lines.

P10066.cpp: The Twin Towers
Longest common subsequence.

P10067.cpp: Playing with Wheels
FIFO queue usage.

P10070.java: Leap Year or Not Leap Year
BigInteger, multiply, divide, divides.

P10071.cpp: Back to High School Physics
distance after time computation

P10078.java: The Art Gallery
angle check

P10079.cpp: Pizza Cutting
Trivial circle slicing.

P10082.cpp: WERTYU
Char substitution, use string to build substitution array.

P10098.cpp: Generating Fast, Sorted Permutation
Copy of P195. Permutations in alphabetical (not lex) order, permutation handler,all permutations of strings

P10099.cpp: The Tourist Guide (Skiena)
Modified Dijkstra for Widest path problem / the bottleneck shortest path problem. Dijkstra implementation can be re-used for other purposes.

P10104.cpp: Euclid Problem
Simulate GCD as if by hand. Solve AX+BY = D where D = GCD(A,B).

P10106.java: Product
BigInteger multiply, read/write ints, read to end EOF.

P10107.cpp: What is the Median
Multiset - maintain median using two sets, rbegin, begin, iterators.

P10110.cpp: Light, more light (Skiena)
Prime factorization, count divisors

P10127.cpp: Ones
Ad hoc add n until all ones.

P10130.cpp: SuperSale
Packing problem with price and weight. Maximize price for a given weight. No duplicate items.

P10131.cpp: Is bigger Smarter?
Longest increasing subsequence - brute for solution (elephant weight,iq)

P10137.cpp: The Trip (Skiena)
read and write ints with decimal place

P10142.cpp: Australian Voting System (Skiena)
Simulation

P10161.cpp: Ant on a Chessboard
Trivial. sqrt.

P10168.cpp: Summation of Four Primes
Prime sieve. Goldbach's conjecture.

P10170.cpp: The Hotel with Infinite Rooms
Binary search in constantly increasing sequence.

P10173.java: Smallest Bounding Rectangle
Ch, ch walk, ch bounding box turn

P10183.java: How Many Fibs?
BigInteger cache fibonacci numbers. Slow iterative traversal is fast enough.

P10195.cpp: The Knights Of The Round Table
Inscribed circle in triangle given by edge lengths.

P10196.cpp: Check The Check
Check game simulation.

P10188.cpp: Automated Judge Script
gets and read line as int.

P10189.cpp: Minesweeper
Get line as two ints, count adjacent fields of matrix.

P10192.cpp: Vacation
Longest common sub sequence.

P10193.cpp: All You Need Is Love
Read line as binary, read line as unsigned long, GCD.

P10209.cpp: Is This Integration?
Area of isosceles traingle is a^2/2*sinA.

P10220.java: I Love Big Numbers !
BigInteger multiply by valueOf int, factorials up to 1000, sum of ditis ins tring, String.toCharArray.

P10222.cpp: Decode the Mad man
keyboard two left letter substitution, including case.

P10226.cpp: Hardwood Species
Count strings, std::string to printf.

P10235.cpp: Simply Emirp
Uses prime sieve isPrime, reverse integer, check prime.

P10252.cpp: Common Permutation
Count letters in string, gets.

P10258.cpp: Contest Scoreboard
C++11 tuple usage.

P10260.cpp: Soundex
Trivial letter substitution.

P10282.cpp: Babelfish
std::map<std::string,std::string>, quick parse strings

P10300.cpp: Ecological Premium
Trivial.

P10302.cpp: Summation of Polynomials
Sum 1^3 + ... + n^3. Include math to derive.

P10303.java: How Many Trees?
Count types of binary trees, BigInteger

P10304.cpp: Zeros and Ones
Find character shifts in string. read line as unsigned int. read line as two unsigned ints. gets.

P10305.cpp: Ordering Tasks
Partial order. Extend to total order.

P10310.cpp: Dog and Gopher
stringstream read as string, copy to double.

P10323.cpp: Factorial! You Must be Kidding!!!
Gotcha factorial definition. Please ignore.

P10327.cpp: Flip Sort
Same as P299, but for arbritrary ints, duplicates.

P10334.java Ray Through Glasses
Fibonacci numbers up to 1000. BigInteger. Caching.

P10336.cpp: Rank the Languages
Region find in grid. Read line as int, read line as two ints, union-find.

P10338.cpp: Mischievous Children
Count permutations of letters of string. Sort letters in string.

P10340.cpp: All in All
Implement "Contains substring", linear time.

P10341.cpp: Solve It
Root finding.

P10346.cpp: Peter's Smokes
Coke problem reformulated.

P10361.cpp: Automatic Poetry
Use '\0' to divide and rearrange strings for output. gets.

P10370.cpp: Above Average
Trivial average, printf with %.

P10394.cpp: Twin Primes
Prime sieve into bitset up to 20.000.000. Twin primes.

P10405.cpp: Longest Common Subsequence
Longest common subset problem. Dynamic programming.

P10409.cpp: Die Game
Die turn simulation.

P10420.cpp: List of Conquests
Read line as int, Read first word from line, map string to count.

P10424.cpp: Love Calculator
stdio.h gets. printf .2f for two decimals.

P10432.java: Polygon Inside A Circle
Area of pizza slize, area of circular segment

P10450.cpp: World Cup Noise
Trivial.

P10465.cpp: Homer Simpson
Brute force packing 2 sizes of element. Minimize spillage, maximize packages.

P10469.cpp: To Carry or not to Carry
Trivial XOR on ints.

P10473.cpp: Simple Base Conversion
Parse string with hex and decimal ints. Print as hex and unsigned long.

P10474.cpp: Where is the Marble?
Sort array of ints, new/delete[].

P10487.cpp: Closest Sums
Sum of two ints in array that is closest to target.

P10499.cpp: The Land of Justice
Area of circle, area of sphere.

P10523.java: Very Easy !!!
BigInteger add, multiply, cache.

P10530.cpp: Guessing Game
Match guesses with binary search.

P10533.cpp: Digit Primes
Prime sieve, isprime and isDigitPrime

P10550.cpp: Combination Lock
Trivial simulate combination lock.

P10579.java: Fibonacci Numbers
Fibonacci numbers up to 5000. BigInteger. Caching.

P10583.cpp: Ubiquitous Religions
Union find, real union find including tree compression in find.

P10591.cpp: Happy Number
Square sum of number. Cache numbers.

P10608.cpp: Friends
Connected components.

P10611.cpp: The Playboy Chimp
Upper bound, lower bound binary searches.

P10684.cpp: The jackpot
Maximum subarray sum, Kadane's algorithm, 1D

P10696.cpp: f91
Trivial

P10699.cpp: Count the factors
Prime sieve. bitset. isPrime, nextPrime.

P10783.cpp: Odd Sum
Trivial number summing

P10784.cpp: Diagonal
Number of diagonals in n-gon.

P10789.cpp: Prime Frequency
Prime sieve into bool array, isPrime.

P10812.cpp: Beat the Spread!
given s,d, find a,b where a+b=s, a-b=d

P10815.cpp: Andy's First Dictionary
Apply tolower.

P10878.cpp: Decode the tape
Binary decode chars.

P10921.cpp: Find the Telephone
Char substitution, isprint, gets => '\0' but beware of \r\n on Win.

P10922.cpp: 2 the 9s
Is long number multiple of 9 by fast recursive sum.

P10924.cpp: Prime Words
Uses isPrime from sieve algorithm. Warning: 1 is a prime here!

P10929.java: You can say 11
BigInteger, multiply, divide, equals, valueOf.

P10931.cpp: Parity
Compute parity of int, display bits.

P10935.cpp: Throwing cards away I
Trivial.

P10945.cpp: Mother Bear
palindrome check, ignore case

P10954.cpp: Add All
Repeatedly sum smallest two ints from multiset.

P10970.cpp: Big Chocolate
Trivial, buffered. Read two positive ints from line.

P10986.cpp: Sending email
Dijkstra for shortest path, actual dijkstra!

P11000.cpp: Bee
Trivial.

P11044.cpp: Searching for Nessy
Trivial multiplication.

P11057.cpp: Exact Sum
Trivial sort and traverse.

P11059.cpp: Maximum Product
Maximum product of continuous sub-array of ints.

P11069.cpp: A Graph Problem
sequence from all maximal independent sets in flat graph

P11150.cpp: Cola
The cola problem with full bottles.

P11172.cpp: Relational Operator
Trivial.

P11185.cpp: Ternary
Convert decimal int to ternary.

P11192.cpp: Group Reverse
gets, swap chars in string.

P11219.cpp: How old are you?
Date comparison. Warning: Description of too old is vague.

P11236.java: Grocery store
sum = product calculation

P11292.cpp: The Dragon of Loowater
Sort and double list walk.

P11332.cpp: Summing Digits
%= 10 and /= 10 on int

P11340.cpp: Newspaper
Read int from various places in string, read unsigned char (extended ascii up to 255)

P11349.cpp: Symmetric Matrix
Trivial matrix check. Read both char and long long.

P11364.cpp: Parking
Trivial min/max, round trip computation

P11388.cpp: GCD LCM
gcd, lcm, thoughts about connection between these in comments of code.

P11389.cpp: The Bus Driver Problem
Trivial sort twice, once with negative integers for rsort

P11417.cpp: GCD
GCD.

P11455.cpp: Behold my quadrangle
Trivial square/rectangle/none sides validity.

P11461.cpp: Square Numbers
cmath sqrt

P11462.cpp: Age Sort
Radix sort ints 1 - 100.

P11479.cpp: Is this the easiest problem?
Triangle categorization. Sort 3 sides for easy categorization.

P11496.cpp: Musical Loop
Trivial count peaks

P11498.cpp: Division of Nlogonia
Trivial

P11503.cpp: Virtual Friends
Circle combine in social networks

P11530.cpp: SMS Typing
Trivial.

P11547.cpp: Automatic Answer
simple calculation

P11559.cpp: Event Planning
Trivial.

P11586.cpp: Train Tracks
Trivial read line as int, read chars in line.

P11608.cpp: No Problem
Simple sum

P11626.java: Convex Hull
ch

P11636.cpp: Hello World!
Trivial counting.

P11677.cpp: Alarm Clock
Time diff.

P11689.cpp: Soda Surpler
Coca cola problem with variable cost.

P11715.cpp: Car
Basic velocity and acceleration formulas.

P11727.cpp: Cost Cutting
Trivial sort 3 numbers, output middle

P11752.cpp: The Super Powers
unsigned long long, overflow detection, powers, square powers

P11764.cpp: Jumping Mario
Trivial count increasing and decreasing.

P11777.cpp: Automate the Grades
Trivial.

P11799.cpp: Horror Dash
Trivial max.

P11800.cpp: Determine the Shape
Permutation handler on 4 ints, lines, points, linesCross, rightTurn, colinear, basic shape detection

P11805.cpp: Bafana Bafana
Trivial.

P11854.cpp: Egypt
Trivial pythagoras check.

P11875.cpp: Brick Game
Trivial.

P11877.cpp: The Coca-Cola Store
The coca cola problem with borrowing.

P11936.cpp: The Lazy Lumberjacks
Trivial.

P11942.cpp: Lumberjack Sequencing
Trivial all increment or all decrement.

P11984.cpp: A Change in Therman Unit
Convert Fahrenheit to Celcius and back.

P12015.cpp: Google is Feeling Lucky
Trivial.

P12100.cpp: Printer Queue
deque, std::sort on int, printer job simulation with priorities.

P12149.cpp: Feynman
Trivial.

P12250.cpp: Language Detection
Trivial string compare equals

P12279.cpp: Emoogle Balance
Trivial.

P12289.cpp: One-Two-Three
std::cin >> int >> char[].

P12372.cpp: Packing for Holiday
Trivial.

P12403.cpp: Save Setu
Trivial.

P12468.cpp: Zapping
Trivial.

P12503.cpp: Robot Instructions
std::cin to both ints and char arrays.

P12577.cpp: Hajj-e-Akbar
Trivial string compare.

P12791.cpp: Lap
Car race overlapping calculation, reead line as two ints.

P12894.cpp: Perfect Flag
Trivial dimensions check.

P12952.cpp: Tri-du
Trivial, read line as two ints.

P13034.cpp: Solve Everything :-)
Trivial 0 check.

--------------------------------------------------------------
Matrix questions (since there are not enough of these in UVa):

1)
Given an n x n matrix A(i,j) of integers, find maximum value A(c,d) - A(a,b) over all choices of indexes such that both c > a and d > b.
Required complexity: O(n^2)

2)
Given an NxM (N rows and M columns) integer matrix with non-negative values (0..MAX_INT inclusive). What is the maximum sum from going top left (0, 0) to bottom right (N-1, M-1) ? The condition is that when you're at point (p, q), you can only move to either right (p, q+1) or down (p+1, q).

Expected time complexity O(N*M)
Expected space complexity O(N+M)

From the space complexity it looks like there is a DP solution, but I couldn't figure it out.

3)
"Min(Max elements rows) not less than Max(Min of columns)"
can you tell me whether above statement ist true or false..
if it true, then tell me solutoin.
if it false, then tell me example

4)
Given an n-by-n matrix of 0's and 1's where all 1's in each row come before all 0's, find the most efficient way to return the row with the maximum number of 0's.

5)
given a number n... print a spiral matrix in O(1) space example if n=5 the op should be:

25 24 23 22 21
10 09 08 07 20
11 02 01 06 19
12 03 04 05 18
13 14 15 16 17

The question may appear trivial but its not...u hav to print in O(1) space

6)
given a matrix pxq
You start from top left and have to reach the bottom right. Can only traverse right or bottom
How many ways are there to reach at the bottom right?
