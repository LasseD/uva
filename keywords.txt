P100.java: The 3n + 1 problem (Skiena)
brute force

P101.java: The Blocks Problem
brute force, simulation

P102.java: Ecological Bin Packing
reverse search

P103.java: Stacking Boxes
Longest increasing subsequence. O(n^2) algorithm fast enough. Warning: Test input with blank lines in judge!

P104.java: Arbitrage
Floyd-Warshall

P105.java: The Skyline Problem
skyline

P106.cpp: Fermat vs Pythagoras
Generate all primitive and non-primitive pythagorean tripples by the formula (a,b,c) = k*(m^2-n^2, 2nm, m^2+n^2), GCD(n,m)=1, k=1,2,...

P107.java: The Cat in the Hat
quick pow

P108.java: Maximum Sum
2D max sum

P109.java: SCUD Buster
ch, ch contains, ch area

P110.java: Meta-Loopless Sorts
comparison tree computation

P111.cpp
dp, length of longest increasing subsequence, n^2 non-optimal implementation

P112.cpp: Tree Summing
dfs, tree parsing, lisp

P113.java: Power of Cryptography
binary search, biginteger, speed up binary search

P114.cpp: Simulating Wizardry
ad hoc, grid, simulation, stepping, pinball, bumper

P115.cpp Climbing Trees
Use P115x, simple tree structure, ad hoc

P116.cpp: Unidirectional TSP (Skiena)
tsp, dp, lexicographical backtracking

P117.cpp: The Postal Worker Rings Once
graph traversal, sssp, even degree graph trick

P118.cpp: Mutant Flatworld Explorers
simulation

P119.cpp: Greedy Gift Givers
count in map

P120.cpp: Stack of Flapjacks (Skiena)
array sort, greedy

P121.cpp: Pipe Fitters
circle packing, geometry

P122.cpp: Trees on the level
binary tree, tree traversal, bfs

P123.cpp: Searching Quickly
getline, split string on space, line to string, multimap

P124.cpp: Following orders
alphabet, np solution, all strings search, relationship propagation

P125.java: Numbering Paths
distinct path counting in graph, cycle detection

P126.cpp The Errant Physicist
polygon multiplication, getline, stringbuffer, set erase insert

P127.cpp: "Accordian" Patience
ostream << debugging, ad hoc

P128.cpp: Software CRC
gets. printf width precision and prefix 0, warning about handling, Shift byte and mod rules, RSA 

P129.cpp: Krypton Factor
Duplicate detection in strings, counting strings, no duplicate substrings, no aa, char* '\0' set.

P130.cpp: Roman Roulette
ad hoc, simulation

P131.cpp: The Psychic Poker Player
<< ostream on std::pair, byte mapping, card typedefs, read cards

P132.cpp: Bumpy Objects
Convex hull, CH, rightturn, leftturn, colinear, point above line, 

P133.cpp: The Dole Queue
ad hoc, simulation, decimal printf 3 wide

P134.cpp: Loglan-A Logical Language
std::istringstream >> string, grammar parser, vowel, string find, npos

P136.java: Ugly Numbers
Precompute

P137.cpp: Polygons
Sweep line algorithm with linear sweep line step handling. Compute polygon area of convex and non-convex polygons.

P138.java: Street Numbers
brute force

P139.cpp: Telephone Tangles
printf string left justify, printf negative offset

P140.cpp: Bandwidth
Compute permutations in alphabetical order, permutation handler, bandwidth, char array, reverse char lookup, max, abs, getline to string, read line as string, printf of chars, printf of ints

P141.cpp: The Spot Game
custom bitvector implementation for 2D board up to 64x64, operator[], operator<, mask bit, rotate x y

P143.cpp: Orchard Trees
operator<,<<,+,-,*,/, exact calculations, gcd, fraction calculations

P144.cpp: Student Grants
Simulation of queue

P145.cpp: Gondwanaland Telecom
sstream to tokenize string and int, constant int array defined

P146.cpp: ID Codes
next in lexicographic order

P147.cpp: Dollars
read double as 100*int, combinations of currency

P148.cpp: Anagram Checker
sstream(string) -> strings, alphabet counting, algorithm sort

P149 Forests
<< ostream on struct, angle using asin, interval scanning, interval checking

P150.cpp: Double Time
Convert between Julian and Gregorian calendars. Month names.

P151.cpp: Power Crisis
simulation, walk in bool array

P152.cpp: Tree's a Crowd
dist in 3D, quick sqrt lookup

P153.cpp: Permalex
factorial, prime factorization of factorials like 160 but as a function, factoral with division, count permutations, compute lexicographical order

P154.cpp: Recycling
ad hoc, algorithm sort on vector, simple comparison.

P155.cpp: All Squares
ad hoc.

P156.cpp: Ananagrams
apply tolower, sort letters in string

P160.cpp: Factors and Factorials
factorial prime factorization, aligned printf, primes up to 100, define 

P162.cpp: Beggar My Neighbour
card game simulation. typedef pair -> SUIT VAL

P164.cpp: String computer
Edit distance. Backtrack for operations. Maintain result length for correct positions of operations.

P165.cpp: Stamps
Combinations of stamps, exponential time algorithm

P166.cpp: Making Change
Minimize coins exhanged

P167.cpp: The Sultan's Successors
chess board queen cover, easy permutation handler usage of size 8, print chess board

P170.cpp: Clock Patience
suit -> int mapping, simulation, card game, read cards

P173.cpp: Network Wars
Simulation, graph walk, std::cin to std::string, parse ; : syntax

P179.cpp: Code Breaking
permutation handler with variable size, sort partial string, default char string construction.

P181.cpp: Hearts
Switch case default

P184.cpp: Laser Lines
colinear points, << ostream std::pair<int,int>, std::sort, allocate lookup arrays

P190.cpp: Circle Through Tree Points
tangents, intersection between lines - not line segments, nan avoidance, print char, circle equations

P191.cpp: Intersection
rectangle line intersection, line line intersection, colinear, rightturn

P193.cpp: Graph Coloring
Heuristic by Brian Fry.

P195.cpp Anagram
Compute permutations in alphabetical order, permutation handler, std::sort with custom comparison comparator

P200.cpp: Rare Order
Topo sort, extending partial order to total order, lex compare

P201.cpp: Squares
Trivial.

P202.cpp: Repeating Decimals
Find cycle in primary school division.

P216.cpp: Getting in Line
Permutation handler of variable size - try all.

P218.java: Moth Eradication
ch

P227.cpp: Puzzle
5 x 5 push puzzle. getline(cin,line);

P231.cpp: Testing the CATCHER
longestIncreasingSubsequence, Longest Increasing Subsequence

P232.cpp: Crossword Answers
Build matrix of strings from cin.

P247.cpp: Calling Circles
Find cliques in graph by iteratively expanding a->b & b->c => a->c

P253.cpp: Cube painting
Rotate colored cube.

P256.cpp: Quirksome Squares
printf n wide with leading 0's.

P260.cpp: Il Gioco dell'X 
Find path across grid.

P263.cpp: Number Chains
Sort digits in number in constant time. Flip long.

P264.cpp: Count the Cantor
Triangle of fractions.

P270.cpp: Lining Up
Find max number of points that lie on a line. std::map value add line ++m[x].

P271.cpp: Simply Syntax
Trivial string run.

P272.cpp: TEX Quotes
Trivial std::cin.getline(line,len).

P278.cpp: Chess
Count maximal placement of knights, rooks, queens and kings on chess board. 

P280.cpp: Vertex
Graph unreachable, adjacency lists

P291.java: The House of Santa Claus
string check

P294.cpp: Divisors
Prime sieve on bitset, prevPrime, nextPrime, numberOfDivisors, isPrime, number with most divisors.

P297.cpp: Quadtrees
Parse prefix notation of quadtrees.

P299.cpp: Train Swapping
Trivial, dumb brute force counting.

P300.cpp Maya Calendar
Trivial.

P305.cpp: Joseph
Precompute.

P311.cpp: Packets
Pack squares 1x1 to 6x6 on 6x6 pallets.

P315.cpp: Network
DFS, find critical nodes in graph, Edge-list presentation, std::stringstream line to ints

P324.java: Factorial Frequencies
Biginteger, factorials, count characters in string.

P336.cpp: A Node Too Far
All pair shortest path in arbitrary graph. Floyd-Warshall.

P340.cpp: Master-Mind Hints
Compute master mind game score.

P341.cpp: Non-Stop Travel
Dijkstra shortest path with backtracking for path. Dijkstra. Modern.

P343.cpp: What Base is This?
Convert string int in base 2-36 to int. Poorly defined min. base.

P344.cpp: Roman Digititis
Compute roman digits up to 100.

P348.cpp: Optimal Array Multiplication Sequence
Exhaustive search ways to order multiplications.

P350.cpp: Pseudo-Random Numbers
Find length of loop using Floyd's cycle finding algorithm.

P352.cpp: The Seasonal War
Read line as int. Union find.

P353.cpp: Pesky Palindromes
Find all palindromes in string. Sub string (substr) on strings.

P355.cpp: The Bases Are Loaded
Convert int to any base, std::cin >> std::hex input read, read and write TOUPPER std::cin and std::cout.

P356.c: Square Pegs and Round Holes
Trivial.

P357.cpp: Let Me Count The Ways
Combinations of currency down to 1 cent. Up to 30000 cents.

P361.java: Cops and Robbers
ch, ch contains point

P369.cpp: Combinations
N choose M, N choose K, Binomial coefficient.

P371.cpp: Ackermann Functions
3n+1 problem, use array to pre-compute. <cstring> memset

P374.cpp: Big Mod
a^b mod c for big a, b.

P378.cpp: Intersecting Lines
Overlapping lines, check lines cross and compute intersection point.

P382.cpp: Perfection
Find divisors.

P383.cpp: Shipping Routes
All pair shortest path (SSSP) by Floyd-Marshall.

P386.java: Perfect Cubes
reuse computations

P389.cpp: Basically Speaking
Convert int to any base, std::cin >> std::hex input read (can take both with and without 0x first)

P392.cpp: Polynomial Showdown
Format a polynomial for printing.

P394.cpp: Mapmaker
Easy read strings and ints.

P400.cpp: Unix ls
read int and string.

P401.cpp: Palindromes
Check palindrome, check mirrored palindrome.

P406.cpp: Prime Cuts
Uses prime sieve and lists primes.

P408.cpp: Uniform Generator
Trivial simulation.

P409.cpp: Excuses, Excuses!
replace_if to transform chars in string

P410.cpp: Station Balance
Trivial.

P412.cpp: Pi
GCD on int.

P414.cpp: Machined Surfaces
Read line as int, read line as char[].

P417: Word Index
Dumb brute force.

P423.cpp: MPI Maelstrom
Dijkstra for max of all possible destinations (not just one destination)

P424.java: Integer Inquery
BigInteger parse from string, add, ZERO.

P429.cpp: Word Transformation
Find word path where steps on path have edit distance 1 (one letter changes).

P437.cpp: The Tower of Babylon
Maximal Cube stacking by improving in rounds.

P438.cpp: The Circumference of the Circle
tangents, intersection between lines, nan avoidance, radius and circomference of circle through 3 points.

P439.cpp: Knight Moves
Chess board knight move buildup

P440.cpp: Eeny Meeny Moo
Precompute.

P441.cpp: Lotto
Ways to choose k elements of set of size n. No permutation handler.

P442.cpp: Matrix Chain Multiplication
Parse parenthesis expression and compute from resulting tree. Matrix multiplication elementary opretaion counting.

P443.cpp: Humble Numbers
Humble number generation: Generate numbers with given prime factors.

P444.cpp: Encoder and Decoder
<algorithm> reverse on char*

P445.cpp: Marvelous Mazes
Trivial maze decoding.

P446.cpp: Kibbles "n" Bits "n" Bits "n" Bits
ANSI C scanf fom int, hex, and string, print binary.

P455.cpp: Periodic Strings
Read int from char[], gets.

P457.cpp: Linear Cellular Automata
puts("") for new line and puts for everything else as well.

P458.cpp: The Decoder
Character substitution. gets => '\0' to be checked. printf("%s\n", s);

P459.cpp: Graph Connectivity
Count connected components.

P460.cpp: Overlapping Rectangles
Find 2D rectilinear integer rectangle overlap.

P465.cpp: Overflow
Signed in overflow detection.

P469.cpp: Wetlands of Florida
Connected region in grid.

P474.cpp: Heads / Tails Probability
Compute first 4 digits of 2^-N

P476.cpp: Points in Figures: Rectangles
std::cin >> char >> double, quick delta compare.

P477.cpp: Points in Figures: Rectangles and Circles
std::cin >> char >> double, quick delta compare, point in rectangle, point in circle.

P478.cpp: Points in Figures: Rectangles, Circles, Triangles
rightTurn and colinear for doubles, check point in triangle.

P481.cpp: What Goes Up
Longest increasing subsequence. nlogn algorithm. Both strongly increasing and simply increasing (with duplicates)

P482.cpp: Permutation Arrays
std::cin to read line as std::string, std::stringstream to read ints and strings from string (As in StringTokenizer).

P483.cpp: Word Scramble
string parse, letter swapping

P484.cpp: The Department of Redundancy Department
Count duplicates and preserve order using two vectors and a map.

P485.java: Pascal's Triangle of Death
Brute force

P486.cpp: English-Number Translator
English number names to long.

P488.cpp: Triangle Wave
Trivial, but PDF is wrong. UVA contacted.

P489.cpp: Hangman Judge
Read line as signed int. Count letters in string. gets.

P490.cpp: Rotating Sequences
get strings out of a matrix

P492.cpp: Pig-Latin
getchar, putchar for single character handling. printf("%c",c), scanf("%c") != EOF.

P494.cpp: Kindergarden Counting Game
Trivial wc for words isprint isalpha.

P495.java: Fibonacci Freeze
Fibonacci numbers up to 5000, BigInteger.

P496.cpp: Simply Subsets
Trivial.

P497.cpp: Strategic Defence Initiative
Longest increasing subsequence, parse input using atoi on gets lines.

P498.cpp: Polly the Polynomial
Read lines as strings and use stringstream to get ints from lines.

P499.cpp: What's The Frequency
Count letters in string, gets, isalpha, vector sort of pairs.

P507.cpp: Jill Rides Again
Maximum subarray problem using Kadane's algorithm (max sub array)

P514.cpp: Rails
Trivial stack and vector.

P516.cpp: Prime Land
Prime sieve, nextPrime, isPrime, prevPrime, prime factorization top down. Read all ints on line using gets.

P524.cpp: Prime Ring Problem
Permutation handler with custom size. All primes up to 32.

P530.cpp: Binomial Showdown
Binomial as smaller product. n|k = n|n-k.

P531.cpp: Compromise
Longest common subsequence with strings and backtracking.

P532.cpp: Dungeon Master
BFS in 3D matrix. Vector3 implementation, operator==.

P534.cpp: Frogger
Minimax shortest path in Euclidean space. (frog jumps from stone to stone)

P536.cpp: Tree Recovery
Find post order traversal given inorder and preorder.

P537.cpp: Artificial Intelligence?
Parse double from char*.

P539.cpp: The Settlers of Catan
Longest path in graph where each edge may be visited once.

P540.cpp: Team Queue
deque, maintain deque's.

P541.cpp: Error Correction
Trivial bit counting of matrix.

P543.cpp: Goldbach's Conjecture
Generate primes using prime sieve.

P544.cpp: Heavy cargo
Maximin path in graph using union-find, limits MAX, minimize height of UF structure. (Using minimax algorithm from "Bond" with negative weights)

P555.cpp: Bridge Hands
Encode and decode cards. Sort. Modern.

P558.cpp: Wormholes
Bellman-Ford to detect negative weight cycles. int limits max value.

P562.cpp: Dividing coins
Dynamic programming to select best subset with sum less than given amount.

P567.cpp: Risk
all pair shortes path

P568.cpp: Just the Facts
Last digit of the first 10000 factorials. Assume all digits don't zero.

P571.cpp: Jugs
Die Hard 3 jug simulation.

P572.cpp: Oil Deposits
Union find on 100 x 100 grid. Read line as two ints.

P573.cpp: The Snail
Trivial snail climb simulator.

P574.cpp: Sum It Up
Simple permutation run.

P575.cpp: Skew Binary
Trivial binary eval with last digit up to 2.

P576.cpp: Haiku Review
Trivial.

P579.cpp: Clock Hands
Easy angle between clock arms, no trigonometry.

P580.java: Critical Mass
Scanner nextInt(), BigInteger add, subtract.

P583.cpp: Prime Factors
Uses prime sieve, nextPrime, factorize up to 2^32.

P587.cpp: There's treasure everywhere!
Trivial.

P590.cpp: Always on the run
Flight graph walk. DP.

P591.cpp: Box of Bricks
Trivial

P594.cpp: One Little, Two Little, Three Little Endians
Little to big endian conversion.

P599.cpp: The Forrest for the Trees
Union-find (UF) to find graphs with cycles, trees and trees with only a single node (acorns).

P608.cpp: Counterfeit Dollar
Scale riddle: Rule based elimination.

P612.cpp: DNA Sorting
read ints and strings as char* to std::string, count inversions.

P615.cpp: Is It A Tree?
Find out if a given graph is a tree. Be ware of cycles when finding root and visiting all nodes.

P621.cpp: Secret Research
Trivial

P623.java: 500!
BigInteger multiply by valueOf int, factorials up to 1000.

P624.cpp: CD
Dynamic programming to select best subset with sum less than given amount. Backtrack.

P627.cpp: The Net
All pairs shortest paths with PREV backtracking to find shortest paths.

P628.cpp: Passwords
Trivial.

P636.cpp: Squares
Check if number is a square number (has an integer square root) using binary search.

P637.cpp: Booklet Printing
Trivial page order.

P639.cpp: Don't Get Rooked
Place rooks (towers) on chess board with walls.

P640.c: Self Numbers
bool array in ANSI c.

P642.cpp: Word Amalgamation
Sort letters in string, find words with rearranged letters.

P644.cpp: Immediate Decodability
Binary suffix tree construction to be used for prefix-checks. Simple.

P657.cpp: The die is cast
Flood fill with two level filling.

P661.cpp: Blowing Fuses
Trivial simulation.

P673.cpp: Parentheses Balancing
Using a stack to check parentheses.

P674.cpp: Coin Change
Copy of P147 Dollars, atoi

P679.cpp: Dropping Balls
Binary tree insertion simulation. Compute children indices in binary tree.

P681.java: Convex Hull Finding
ch

P686.cpp: Goldbach's Conjecture (II)
Find primes up to 2^15 using already found primes.

P694.cpp: The Collatz Sequence
Trivial algorithm simulation.

P696.cpp: How May Knights
Placement of knights on a chess board. Notice: Board size down to 0!

P699.cpp: The Falling Leaves
Build, traverse and delete binary tree.

P706.cpp: LCD Display
Output as LCD display.

P712.cpp: S-Tree
Simulate index of nodes on path down a full binary tree.

P713.cpp: Adding Reversed Numbers
std::cin >> int and char[].

P714.cpp: Copying Books
Binary search.

P725.cpp: Division
Find all pairs abcde/fghij=N, PH<int>

P727.cpp: Equation
Dijkstra's Shunting yard algorithm. Infix to postfix conversion of math expressions.

P729.cpp: The Hamming Distance Problem
Print all n choose k combinations of binary ints with x ones.

P737.cpp: Gleaming the Cubes
Rectilinear integer cube intersecion.

P739.cpp: Soundex Indexing
Convert strings to soundex codes.

P740.cpp: Baudot Data Communication Code
Trivial.

P741.cpp: Burrows Wheeler Decoder
Burrows Wheeler decoding, custom prefix-append strings with operator <.

P748.java: Exponentiation
Java biginteger, move dot to given position in float output.

P750.cpp: 8 Queens Chess Problem
Flip and rotate chess board with queens.

P755.cpp: 487--3279
Convert phone numbers from string to ints. Mapping of characters.

P762.cpp: We Ship Cheap
Dijkstra for unit weight edge graph.

P784.cpp: Maze Exploration
gets and puts to paint maze.

P785.cpp: Grid Colouring
Flood fill by searching for fill color first.

P787.java
Scanner, BigInteger, multiply, ArrayList::clear()

P793.cpp: Network Connections
Paranoid parsing.

P796.cpp: Critical Links
DFS to find edges that are not part of cycles.

P820.cpp: Internet Bandwidth
Edmonds-Karp max flow algorithm: BFS. Residual flow graph.

P821.cpp: Page Hopping
All pair shortest paths in directed graph.

P825.cpp: Walking on the Safe Side
scanf getchar and getline to read from stdin.

P834.cpp: Continued Frations
Transform rational number to continued fraction. Simple math.

P836.cpp: Largest Submatrix
Copy upray area finding.

P837.cpp: Light and Transparencies
Sort and printf.

P839.cpp: Not so Mobile
Trivial.

P843.cpp: Crypt Kicker (Skiena)
Read lines, parse to int, parse to string, parse to tokens, substitution cipher.

P846.cpp: Steps
Step latter computation.

P847.cpp: A Multiplication Game
Game simulation.

P850.cpp: Crypt Kicker II (Skiena)
Substitution cipher

P855.cpp: Lunch in Grid City
Compute median.

P861.cpp: Little Bishops
Precompute answer using slow try-all-possibilities algorithm.

P871.cpp: Counting Cells in a Blob
Flood fill to find largest component. Including diagonals.

P872.cpp: Ordering
Permutation handler of variable size (on vector of chars) which fulfills constraints on order.

P884.cpp: Factorial Factors
Prime sieve, count number of factors of first 1000000 integers.

P895.cpp: Word Problem
string -> int[26] word compression.

P897.cpp: Anagrammatic Primes
Prime sieve, bitset and permutation handler of variable size on ints.

P900.cpp: Brick Wall Patterns
Fibonacci numbers up to 50.

P902.cpp: Password Search
Encode 10 chars in 64 bit ULL for quick search.

P908.cpp: Re-connecting Computer Sites
Proper Union-find, union find, uf. sort and connect edges to MST. Modern.

P913.cpp: Joana and the Odd Numbers
Count number of odds numbers written by Joana.

P914.cpp: Jumping Champion
Prime sieve, extended nextPrime, extended prevPrime, isPrime, gaps between primes.

P920.cpp: Sunny Mountains
Length of part of vector.

P924.cpp: Spreading The News
BFS by wave simulation.

P928.cpp: Eternal Truths
Grid walk with up to three types of visits for each cell. 

P929.cpp: Number Maze
Dijkstra's shortest path in grid of numbers.

P941.cpp: Permutations
Find given permutation of string such as index 2 for aab is baa, fac.

P948.cpp: Fibonaccimal Base
Trivial cache fibonacci numbers[45];

P990.cpp: Diving for Gold
Dynamic Programming to decide which treasures to bring home (classical 0/1 knapsack)

P991.cpp: Safe Salutations
Combinations of non-crossing connections/pairing/matching on circle perimeter.

P993.cpp: Product of digits
Given N, find number where N is product of digits of number.

P1112.cpp: Mice and Maze
Dijkstra, modern, simple application of Dijkstra to compute total number of vertices within reach of source.

P1124.c: Celebrity jeopardy
Trivial gets puts.

P1203.cpp: Argus
Maintain priority queue.

P1210.cpp: Sum of Consecutive Prime Numbers
Prime sieve. Find consecutive primes that sum to given number.

P1225.cpp: Digit Counting
Cache counted digits.

P1230.cpp: MODEX
Compute x^y mod n (quick exponentiation).

P1237.cpp: Expert Enough?
lower_bound and iterate maps.

P1312.cpp: Cricket Field
Largest area search by random 2D-KD-partiotioning. Random permutation.

P1583.cpp: Digit Generator
Trivial.

P1584.cpp: Circular Sequence
string(&s[i])

P1585.cpp: Score
Trivial score counting in string

P1586.cpp: Molar Mass
Count atoms when written on formula such as C2H3HO3.

P1644.cpp: Prime Gap
Prime sieve, bitset, nextPrime, prevPrime, isPrime, prime walk.

P10000.cpp: Longest Paths
Longest path in graph. All edge weights 1.

P10002.cpp: Center of Masses
BEST, ch, ch center of mass

P10003.cpp: Cutting Sticks
Computing all sub solutions. Brute force dynamic programming.

P10004.cpp: Bicoloring
Simple graph traversal.

P10005.cpp: Packing Polygons
Emo Welzl algorithm for smallest enclosure of point set. Circle through two points. Outer circle of triangles.

P10006.cpp: Carmichael Numbers
Trivial after precomputation.

P10007.java: Count the Trees
Compute Catalan numbers (Number of binary trees)

P10008.cpp: What's Cryptanalysis?
sort pair, isprint for proper printable char detection

P10009.cpp: All Roads Lead Where?
Find LCA in rooted tree.

P10010.cpp: Where's Waldorf
General trie construction and queries.

P10012.cpp: How Big Is It?
Permutation handler of variable size with constructor data. Optimal circle packing.

P10013.cpp: Super long sums
Read digits to shorts.

P10014.cpp: Simple calculations
Binary search after double.

P10018.cpp: Reverse and Add
palindrome check for int, int to digit array.

P10019.cpp: Funny Encryption Method
Interpret int as hex, reverse decimal int, count bits.

P10020.cpp: Minimal coverage
Cover interval with subset of intervals.

P10023.java: Square root
BigInteger square root

P10025.cpp: The ? 1 ? 2 ? ... ? n = k problem
Solve the 1 + 2 + 3 summation problem with + and - so sum is equal to k.

P10026.cpp: Shoemaker's Problem
Sort by time/fine.

P10032.cpp: Tug of War
NP-complete solved using bit manip. Find sub-set with n/2 elements and max sum less than limit.

P10033.cpp: Interpreter
Simulate RAM operations. Read any number of ints from lines.

P10034.cpp: Freckles
Minimum spanning tree of points in plane.

P10035.cpp: Primary Arithmetic (Skiena)
Trivial carry counting

P10036.cpp: Divisibility
Arrange + and - in sequence to find if any sum is divisible with K.

P10037.cpp: Bridge (Skiena)
Pass the torch, sort

P10038.cpp: Jolly Jumpers (Skiena)
Sort array

P10041.cpp: Vito's Damily (Skiena)
Trivial array sort, stream for sum

P10042.cpp: Smith Numbers
Prime sieve, isPrime up to 10^9, isSmithNumber, sum digits in numbers.

P10044.java: Erdos Numbers
Computing co author dist from Erdos. Sets and maps.

P10047.cpp: The Monocycle
BFS to walk through grid while minimizing operations and hitting target length.

P10048.cpp: Audiophobia
All pair shortest path with MAX relaxation function. Floyd-Warshall.

P10049.cpp: Self-describing Sequence
Compute Solomon Golomb's sequence.

P10050.cpp: Hartals
Trivial simulation.

P10054.cpp: The Necklace
Connect links to form a full chain. Double linked list.

P10055.cpp: Hashmat the Brave Warrior
abs.

P10056.cpp: What is the Probability?
pow.

P10057.cpp: A mid-summer night's dream.
Walk while maintaining sum of differences to median.

P10062.cpp: Tell me the frequencies!
Count characters in lines.

P10065.cpp: Useless Tile Packers
CH (Graham's scan) and general polygon area computation.

P10066.cpp: The Twin Towers
Longest common subsequence.

P10067.cpp: Playing with Wheels
FIFO queue usage.

P10069.java: Distinct Subsequences
Java BigInteger, number of ways X is a subsequence of Y.

P10070.java: Leap Year or Not Leap Year
BigInteger, multiply, divide, divides.

P10071.cpp: Back to High School Physics
distance after time computation

P10074.cpp: Take the Land
Max area in grid by using "up-rays" and n^3 algorithm.

P10077.cpp: The Stern-Brocot Number System
Trivial.

P10078.java: The Art Gallery
angle check

P10079.cpp: Pizza Cutting
Trivial circle slicing.

P10080.cpp: Gopher II
Use Modified Ford-Fulkerson for Maximum Bipartite Matching: http://www.geeksforgeeks.org/maximum-bipartite-matching/

P10082.cpp: WERTYU
Char substitution, use string to build substitution array.

P10093.cpp: An Easy Problem!
Find divisibility with base-1

P10098.cpp: Generating Fast, Sorted Permutation
Copy of P195. Permutations in alphabetical (not lex) order, permutation handler,all permutations of strings

P10099.cpp: The Tourist Guide (Skiena)
Modified Dijkstra for Widest path problem / the bottleneck shortest path problem.

P10100.cpp: Longest Match
Longest common subsequence. Hashcode of string to LL.

P10101.cpp: Bangla Numbers
printf("%llu") for unsigned long long.

P10102.cpp: The path in the colored field
Trivial because number of 1's and 3's are low... but not stated. :(

P10104.cpp: Euclid Problem
Simulate GCD as if by hand. Solve AX+BY = D where D = GCD(A,B).

P10105.cpp: Polynomial Coefficient
Compute coefficient in expansion of polynomial (x1+...xk)^n. Binomial, Factorial, Multinomial theorem, binomial with Multiindices.

P10106.java: Product
BigInteger multiply, read/write ints, read to end EOF.

P10107.cpp: What is the Median
Multiset - maintain median using two sets, rbegin, begin, iterators.

P10110.cpp: Light, more light (Skiena)
Prime factorization, count divisors.

P10114.cpp: Loansome Car Buyer
Depreciation vs residual loan.

P10115.cpp: Automatic Editing
Replace occurences of string in string.

P10116.cpp: Robot Motion
Walk through grid of arrows.

P10125.cpp: Sumsets
Find max d in set where a+b+c=d are elements in set.

P10127.cpp: Ones
Ad hoc add n until all ones.

P10130.cpp: SuperSale
Packing problem with price and weight. Maximize price for a given weight. No duplicate items.

P10131.cpp: Is bigger Smarter?
Longest increasing subsequence - brute for solution (elephant weight,iq)

P10132.java: File Fragmentation
Match pairs of strings so they all concat to the same solution.

P10137.cpp: The Trip (Skiena)
read and write ints with decimal place

P10138.cpp: CDVII
Highway toll calculation. Easy.

P10139.cpp: Factovisors
Uses prime sieve, nextPrime, factorize up to 2^32, find if m divides n!.

P10140.cpp: Prime Distance
Prime sieve on high prime interval.

P10141.cpp: Request for Proposal
gets and scanf to read from input. strcpy for string copy. puts and printf for output.

P10142.cpp: Australian Voting System (Skiena)
Simulation

P10147.cpp: Highways
Proper union-find and planar MST construction.

P10150.cpp: Doublets
BFS on edit distance graph.

P10152.cpp: ShellSort
Find inversions/climbs to top of stack for sorting.

P10158.cpp: War
Use union-find to maintain friends and enemies.

P10161.cpp: Ant on a Chessboard
Trivial. sqrt.

P10162.cpp: Last Digit
Compute (1^1+2^2+...N^N)%10. (It seems to cycle every 100).

P10167.cpp: Birthday Cake
atan2 for angle. Line (0,0)->(A,B) is Bx-Ay=0. Colinear and left turn.

P10168.cpp: Summation of Four Primes
Prime sieve. Goldbach's conjecture.

P10170.cpp: The Hotel with Infinite Rooms
Binary search in constantly increasing sequence.

P10171.cpp: Meeting Prof. Miguel...
Dijkstra shortest path to all possible targets.

P10173.java: Smallest Bounding Rectangle
Ch, ch walk, ch bounding box turn

P10176.cpp: Ocean Deep! - Make it shallow!!
Division of binary number to check if a number divides it.

P10179.cpp: Irreducable Basic Fractions
Euler's Phi function fixed for N=1: Phi(1)=1.

P10182.cpp: Bee Maja
Find coordinates from spiral walk on hexagonal grid.

P10183.java: How Many Fibs?
BigInteger cache fibonacci numbers. Slow iterative traversal is fast enough.

P10190.cpp: Divide, But Not Quite Conquer!
Trivial.

P10191.cpp: Longest Nap
Trivial. Define String, stringstream, getline to strings and ints. GOOD TO COPY FROM!

P10194.cpp: Football (aka Soccer)
Parse extended ascii characters and detect those that isprint should detect. scanf and gets together.

P10195.cpp: The Knights Of The Round Table
Inscribed circle in triangle given by edge lengths.

P10196.cpp: Check The Check
Check game simulation.

P10198.java: Counting
BigInteger add.

P10199.cpp: TOurist Guide
Detect if node is critical. O(n^2) to find all critical nodes.

P10188.cpp: Automated Judge Script
gets and read line as int.

P10189.cpp: Minesweeper
Get line as two ints, count adjacent fields of matrix.

P10192.cpp: Vacation
Longest common sub sequence.

P10193.cpp: All You Need Is Love
Read line as binary, read line as unsigned long, GCD.

P10200.cpp: Prime Time
Print percentage with last digit correction.

P10205.cpp: Stack 'em Up
Use scanf, gets and atoi to read ints from lines, lines with only one int, detect empty lines. operator << on pairs to write card names.

P10209.cpp: Is This Integration?
Area of isosceles traingle is a^2/2*sinA.

P10213.java: How Many Pieces of Land ?
BigInteger. Scanner. Moser's Circle Problem. Divide circle into regions using chords.

P10219.cpp: Find the ways !
log base 10 of binomial coefficient log10(n choose k)

P10220.java: I Love Big Numbers !
BigInteger multiply by valueOf int, factorials up to 1000, sum of digits in string, String.toCharArray.

P10221.cpp: Satellites
Compute chrod and angle of rotation around a circle. 

P10222.cpp: Decode the Mad man
keyboard two left letter substitution, including case.

P10223.cpp: How many nodes ?
Catalan numbers = Number of distinct binary trees.

P10226.cpp: Hardwood Species
Count strings, std::string to printf.

P10229.cpp: Modular Fibonacci
Detect cycles in fib chain when having a mod 2^N.

P10235.cpp: Simply Emirp
Uses prime sieve isPrime, reverse integer, check prime.

P10242.cpp: Fourth Point !!
Trivial.

P10243.cpp: Fire! Fire!! Fire!!!
Minimal edge coverage in graph.

P10245.cpp: The Closest Pair Problem
Closest pair in Euclidean space.

P10252.cpp: Common Permutation
Count letters in string, gets.

P10258.cpp: Contest Scoreboard
C++11 tuple usage.

P10260.cpp: Soundex
Trivial letter substitution.

P10263.cpp: Railway
Distance and closest point between line segment and point. operator overloading for vectors/point2d for +, - and scaling. Dot product.

P10267.cpp: Graphical Editor
Paint region in grid.

P10276.cpp: Hanoi Tower Troubles Again!
isSquareNumber().

P10278.cpp: Fire Station
Dijkstra shortest path for multiple sources for largest path.

P10279.cpp: Mine Sweeper
Compute Mine Sweeper board standing.

P10281.cpp: Average Speed
Trivial.

P10282.cpp: Babelfish
std::map<std::string,std::string>, quick parse strings

P10285.cpp: Longest Run on a Snowboard
Easy incremental improvement on full grid.

P10286.cpp: Trouble with a Pentagon
Compute maximal square side length inside a pentagon. M_PI simple.

P10295.cpp: Hay Points
getline(std::cin, s), stringstream, parse strings and ints from lines. die().

P10297.cpp: Beavergnaw
Area of cone is PI*r^2*h/3.

P10298.cpp: Power Strings
Find longest period in string.

P10299.cpp: Relatives
Compute number of relatively prime numbers below n = Euler's totient function.

P10300.cpp: Ecological Premium
Trivial.

P10301.cpp: Rings and Glue
Proper Union Find (UF) with path compression. union-find. Check overlapping circles Point2D.

P10302.cpp: Summation of Polynomials
Sum 1^3 + ... + n^3. Include math to derive.

P10303.java: How Many Trees?
Count types of binary trees, BigInteger

P10304.cpp: Zeros and Ones
Find character shifts in string. read line as unsigned int. read line as two unsigned ints. gets.

P10305.cpp: Ordering Tasks
Partial order. Extend to total order.

P10310.cpp: Dog and Gopher
stringstream read as string, copy to double.

P10315.cpp: Poker Hands
Parse cards with suit and color, rank all hands in poker.

P10323.cpp: Factorial! You Must be Kidding!!!
Gotcha factorial definition. Please ignore.

P10327.cpp: Flip Sort
Same as P299, but for arbritrary ints, duplicates.

P10330.cpp: Power Transmission
Edmonds–Karp algorithm to ensure quick termination O(VE^2) instead of flow-dependent Ford-Fulkerson. queue. numeric_limits<LL>::max(). Enhanced graph to consider flow restrictions on nodes.

P10334.java Ray Through Glasses
Fibonacci numbers up to 1000. BigInteger. Caching.

P10336.cpp: Rank the Languages
Region find in grid. Read line as int, read line as two ints, union-find.

P10337.cpp: Flight Planner
Trivial, but poorly worded.

P10338.cpp: Mischievous Children
Count permutations of letters of string. Sort letters in string.

P10340.cpp: All in All
Implement "Contains substring", linear time.

P10341.cpp: Solve It
Root finding.

P10344.cpp: 23 out of 5
Simple use of permutation handler to find arithmetic expression.

P10346.cpp: Peter's Smokes
Coke problem reformulated.

P10347.cpp: Medians
Compute area of triangle given the medians. Special case for negative area.

P10360.cpp: Rat Attack
Sums in matrix. memset for ints.

P10361.cpp: Automatic Poetry
Use '\0' to divide and rearrange strings for output. gets.

P10363.cpp: Tic Tac Toe
Analyze if configuration is valid for game.

P10364.cpp: Square
N choose K iteration through list. Use bool array to find balanced selection.

P10365.cpp: Blocks
Compute smallest surface area for any given volume of a "rectangular" block.

P10369.cpp: Arctic Network
Proper Union Find (UF) with path compression. Computing trees in forest. union-find.

P10370.cpp: Above Average
Trivial average, printf with %.

P10377.cpp: Maze Traversal
Walk around a maze. Robot walk.

P10387.cpp: Biliard
Trivial.

P10391.cpp: Compound Words
Word search by tree traversal. Construction of "trie"/word search finite state machine.

P10392.cpp: Factoring Large Numbers
Bitset (bitvector) prime sieve, nextPrime, factorize large primes.

P10394.cpp: Twin Primes
Prime sieve into bitset up to 20.000.000. Twin primes.

P10397.cpp: Connect the Campus
Connect forrest to tree.

P10400.cpp: Game Show Math
Use set<...> rather than normal coin value explosion.

P10404.cpp: Batchet's Game
Simulation of turn based picking stones from table.

P10405.cpp: Longest Common Subsequence
Longest common subset problem. Dynamic programming.

P10407.cpp: Simple division
gcd on int. sort.

P10409.cpp: Die Game
Die turn simulation.

P10420.cpp: List of Conquests
Read line as int, Read first word from line, map string to count.

P10422.cpp: Knights in FEN
Moving knights on a 5x5 chess board. encode and decode configurations.

P10424.cpp: Love Calculator
stdio.h gets. printf .2f for two decimals.

P10432.java: Polygon Inside A Circle
Area of pizza slize, area of circular segment

P10440.cpp: Ferry Loading II
Simulate ferry that can wait until optimal amount of cars onboard.

P10443.cpp: Rock, Scissors, Paper
Grid update simulation.

P10450.cpp: World Cup Noise
Trivial.

P10451.java: Ancient Village Sports
Inner and outer radius of a regular N-gon (regular polygon).

P10452.cpp: Marcus, help!
Trivial simulation.

P10465.cpp: Homer Simpson
Brute force packing 2 sizes of element. Minimize spillage, maximize packages.

P10469.cpp: To Carry or not to Carry
Trivial XOR on ints.

P10473.cpp: Simple Base Conversion
Parse string with hex and decimal ints. Print as hex and unsigned long.

P10474.cpp: Where is the Marble?
Sort array of ints, new/delete[].

P10475.cpp: Help the Leaders
Print all sorted permutations.

P10487.cpp: Closest Sums
Sum of two ints in array that is closest to target.

P10489.cpp: Boxes of Chocolates
Trivial.

P10490.cpp: Mr. Azad and his Son!!!!!
Perfect numbers.

P10491.cpp: Cows and Cars
Probability of wining car in game show.

P10494.java: If We Were a Child Again
BigInteger, split line on white space (\\s+).

P10496.cpp: Collecting Beepers
Permutation Handler of variable size to find TSB of link length up to 10.

P10499.cpp: The Land of Justice
Area of circle, area of sphere.

P10507.cpp: Waking up brain
Tiny graph relaxation.

P10515.cpp: Power et al.
Compute last digit of m^n.

P10523.java: Very Easy !!!
BigInteger add, multiply, cache.

P10528.java: Major Scales
Read and split lines (\\S+).

P10530.cpp: Guessing Game
Match guesses with binary search.

P10533.cpp: Digit Primes
Prime sieve, isprime and isDigitPrime

P10534.cpp: Wavio Sequence
Longest Incresing Subsequence (LIS) where current element has to be included.

P10539.cpp: Almost Prime Numbers
Prime sieve, nextPrime, isPrime, bitset can go to 10 000 000.

P10550.cpp: Combination Lock
Trivial simulate combination lock.

P10551.java: Basic Remains
BigInteger, Scanner, BigInteger with radix/base contruct, remainder() and toString(base).

P10557.cpp: XYZZY
Graph walk using Floyd-Warshall.

P10566.cpp: Crossed Ladders
Binary search for double.

P10573.cpp: Geometry Paradox
Trivial.

P10579.java: Fibonacci Numbers
Fibonacci numbers up to 5000. BigInteger. Caching.

P10583.cpp: Ubiquitous Religions
Bad UF.

P10589.cpp: Area
Trivial.

P10591.cpp: Happy Number
Square sum of number. Cache numbers.

P10596.cpp: Morning Walk
Find if a graph has an Euler tour. Ignore unvisited nodes. Proper union-find.

P10600.cpp: ACM Contest and Blackout
Proper union-find for MST and next MST.

P10608.cpp: Friends
Connected components.

P10611.cpp: The Playboy Chimp
Upper bound, lower bound binary searches.

P10622.cpp: Perfect Pth Powers
pow(N, 1.0/p) for N^1/p.

P10633.cpp: Rare Easy Problem
Find N given N-M where M = N/10.

P10635.cpp: Prince and Princess
Length of LIS (Longest increasing subsequence) in O(nlogn).

P10642.cpp: Can You Solve It?
Grid walk in "shells".

P10646.cpp: What is the Card?
Card game simulation.

P10647.cpp: Optimal House Placement
Parabola min of f(x)=ax^2+bx+c is -b/2a) when a is positive.

P10651.cpp: Pebble Solitare
Bit map manipulation, find all solutions for pebble game (+ stick takeover game on a single row of 12 holes)

P10653.cpp: Bombs! NO they are Mines!!
Shortest path in grid with obstacles (mines). Ignore the "box" code. It doesn't work.

P10656.cpp: Maximum Sum (II)
Trivial, but poorly described. Subset not required to be continuous.

P10662.cpp: The Wedding
Trivial.

P10664.cpp: Luggage
Suitcase packing: Can they be packed in two cars so weight is equal. Max sum weight = 200.

P10667.cpp: Largest Block
Use upray code to compute largest 2D free rectangle.

P10670.cpp: Work Reduction
read ints and strings with splitting on chars.

P10673.cpp: Play with Floor and Ceil
Trivial find p, q so x = p*floor(x/k) + q*ceil(x/k)

P10678.cpp: The Grazing Cow
Area of ellipse from distance between centers=D and r1+r2=L.

P10679.cpp: I Love Strings!!
Suffix array search for substring contains. Remember to delete[] P!

P10684.cpp: The decadary watch
Convert hh:mm::ss:cc time into decimal time.

P10684.cpp: The jackpot
Maximum subarray sum, Kadane's algorithm, 1D

P10696.cpp: f91
Trivial

P10699.cpp: Count the factors
Prime sieve. bitset. isPrime, nextPrime.

P10700.cpp: Camel trading
Try all parenthesis placements.

P10701.cpp: Pre, in and post
Copy of P536.

P10702.cpp: Travelling Salesman
Floyd-Warshall to compute best profit. Optimized to obtain 0.000.

P10703.cpp: Free spots
Find empty cells in grid by handling line by line.

P10706.cpp: Number Sequence
Find digit in sequence 1_12_123_1234_ ... (without '_').

P10714.cpp: Ants
Trivial.

P10717.cpp: Mint
GCD, LCM.

P10721.cpp: Bar Codes
Dynamic programming in 2 dimensions.

P10739.cpp: String to palindrome.
Use DP to compute a palindrome out of any string. Only latest rows are necessary, though.

P10763.cpp: Foreigh Exchange
Find if all pairs (a,b) in a set have a matching (b,a).

P10773.cpp: Back to Intermediate Math
Trivial.

P10783.cpp: Odd Sum
Trivial number summing

P10784.cpp: Diagonal
Number of diagonals in n-gon.

P10785.cpp: The Mad Numerologist
Generate strings from formula and sort alternating letters.

P10789.cpp: Prime Frequency
Prime sieve into bool array, isPrime.

P10790.cpp: How Many Points of Intersection?
Count intersetions of lines between nodes in full bipartite matching.

P10801.cpp: Lift Hopping
Dijkstra (modern) for tiny [5][100] graph.

P10803.cpp: Thunder Mountain
All Pair Shortest Path (Floyd-Warshall) in 2D space.

P10810.cpp: Ultra-Quicksort
Count inversions by constructing a binary tree with elements maintaining the sizes of subtrees. Counts operations in bubble sort.

P10812.cpp: Beat the Spread!
given s,d, find a,b where a+b=s, a-b=d

P10815.cpp: Andy's First Dictionary
Apply tolower.

P10819.cpp: Trouble of 13-Dots
optimal packaging with budget twist.

P10827.cpp: Maximum sum on a torus
Maximum sum rectangle on matrix for all widths and heights.

P10852.cpp: Less Prime
Modern Prime Sieve on bitset, nextPrime, prevPrime, isPrime.

P10878.cpp: Decode the tape
Binary decode chars.

P10879.cpp: Code Refactoring
Prime sieve on bitset. Extended next prime. Factorizing.

P10891.cpp: Game of Sum
Try all possibilities of array game.

P10895.cpp: Matrix Transpose
Transpose sparsely represented matrices.

P10901.cpp: Ferry Loading III
Simulate ferry travelling between coasts. Cars line up in queues.

P10903.cpp: Rock-Paper-Scissors Tournament
Trivial.

P10905.cpp: Children't Game
Custom comparator.

P10908.cpp: Largest Square
Iterate around in grid.

P10911.cpp: Forming Quiz Teams
Permutation handler to find optimal pairing.

P10916.cpp: Factstone Benchmark
log2(N) = loge(N)/loge(2).

P10918.java: Tri Tiling
Domino placements of height 3 for all lengths.

P10919.cpp: Prerequisites?
Trivial.

P10920.cpp: Spiral Tap
Spiral index to x,y-coordinates.

P10921.cpp: Find the Telephone
Char substitution, isprint, gets => '\0' but beware of \r\n on Win.

P10922.cpp: 2 the 9s
Is long number multiple of 9 by fast recursive sum.

P10924.cpp: Prime Words
Uses isPrime from sieve algorithm. Warning: 1 is a prime here!

P10925.java: Krakovia
scanner.nextBigInteger().

P10926.cpp: How Many Dependencies?
ULL as bitvector to find all referenced nodes.

P10928.java: My Dear Neighbours
Trivial.

P10929.java: You can say 11
BigInteger, multiply, divide, equals, valueOf.

P10931.cpp: Parity
Compute parity of int, display bits.

P10935.cpp: Throwing cards away I
Trivial.

P10940.cpp: Throwing cards away II
Simulate reverse card movement.

P10943.cpp: How do you add?
Ways to add K integers to sum N.

P10945.cpp: Mother Bear
palindrome check, ignore case

P10946.cpp: You want what filled?
Connected component finding in 2D grid.

P10948.cpp: The primary problem
Find two primes that sum to N. Prime sieve, extended nextPrime and isPrime.

P10954.cpp: Add All
Repeatedly sum smallest two ints from multiset.

P10959.cpp: The Party, Part I
BFS numbering.

P10963.cpp: The Swallowing Ground
Trivial.

P10970.cpp: Big Chocolate
Trivial, buffered. Read two positive ints from line.

P10976.cpp: Fractions Again?!
Prime sieve. Find all numbers that divide k (and k^2). Find all fractions 1/k=1/x+1/y.

P10986.cpp: Sending email
Dijkstra for shortest path.

P10991.cpp: Region
Area of triangle using semiperimeter (side lengths).

P11000.cpp: Bee
Trivial.

P11085.cpp: Back to the 8-Queens
Use all solutions for 8 queen chess problem from P750 (remember x%10 in range [1..8]).

P11015.cpp: 05-2 Rendezvous
Dijkstra shortest path to all destinations.

P11034.cpp: Ferry Loading IV
Small modification of Ferry Loading III

P11039.cpp: Building designing
Trivial.

P11044.cpp: Searching for Nessy
Trivial multiplication.

P11054.cpp: Wine trading in Gergovia
Trivial.

P11057.cpp: Exact Sum
Trivial sort and traverse.

P11059.cpp: Maximum Product
Maximum product of continuous sub-array of ints.

P11060.cpp: Beverages
Slow topo-sort.

P11063.cpp: B2-Sequence
Trivial... but please read the description closely.

P11068.cpp: An Easy Task
Intersection between lines given formulas of type ax+bx=c

P11069.cpp: A Graph Problem
sequence from all maximal independent sets in flat graph

P11078.cpp: Open Credit System
Trivial.

P11080.cpp: Place the Guards
Simple graph coloring.

P11094.cpp: Continents
Flood fill.

P11110.cpp: Equidivisions
Connected components in grid.

P11121.cpp: Base -2
Compute value in base -2.

P11136.cpp: Hoax or what
use counter to make duplicate events in set unique (rather than using multisets).

P11137.cpp: Ingenuous Cubrency
Combinations of currency. Better documented than other implementations here.

P11150.cpp: Cola
The cola problem with full bottles.

P11151.cpp: Longest Palindrome
Dynamic programming for edit distance palindrome.

P11152.cpp: Colourful Flowers
Semiperimeter, inradius, circumradius of triangle with inscribed and outer circles. M_PI. pi.

P11172.cpp: Relational Operator
Trivial.

P11185.cpp: Ternary
Convert decimal int to ternary.

P11192.cpp: Group Reverse
gets, swap chars in string.

P11207.cpp: The easiest way
Trivial.

P11219.cpp: How old are you?
Date comparison. Warning: Description of too old is vague.

P11221.cpp: Magic square palindromes.
Check isSquareNumber, find square root.

P11223.java: O: dah, dah, dah!
Decode morse code.

P11228.cpp: Transportation system.
Union-find with path compression to link cities in coordinate system after euclidean dist.

P11233.cpp: Deli Deli
scanf and gets for strings or char*.

P11235.cpp: Frequent values
Find most frequent value in interval. NO INTERVAL TREE!

P11236.java: Grocery store
sum = product calculation

P11239.cpp: Open Source
Use set and map to find users enrolled on courses. getline(cin, string);

P11242.cpp: Tour de France
Trivial.

P11244.cpp: Counting Stars
gets and scanf to retrieve grid of stars.

P11286.cpp: Conformity
Encode five numbers in ULL, Update values in map using non-const pointer.

P11292.cpp: The Dragon of Loowater
Sort and double list walk.

P11308.cpp: Bankrupt Baker
read lines of strings, integers, transform string toupper, atoi(s.c_str()).

P11321.cpp: Sort! Sort!! and Sort!!!
sort with custom comparator sort(a, a+N, cmp).

P11332.cpp: Summing Digits
%= 10 and /= 10 on int

P11340.cpp: Newspaper
Read int from various places in string, read unsigned char (extended ascii up to 255)

P11349.cpp: Symmetric Matrix
Trivial matrix check. Read both char and long long.

P11354.cpp: Bond
Minimax path in graph using union-find, limits MAX, minimize height of UF structure.

P11362.cpp: Phone List
Trivial.

P11364.cpp: Parking
Trivial min/max, round trip computation

P11369.cpp: Shopaholic
Trivial. Good base for in/sort/out.

P11371.cpp: Number Theory for Newbies
Trivial.

P11385.cpp: Da Vinci Code
Use both getline(cin,s) and cin >> N together.

P11388.cpp: GCD LCM
gcd, lcm, thoughts about connection between these in comments of code.

P11389.cpp: The Bus Driver Problem
Trivial sort twice, once with negative integers for rsort

P11401.java (and .cpp): Triangle counting
BigInteger cache build with add and valueOf. (But value fits in long, so c++ also works).

P11413.cpp: Fill the Containers
Binary search.

P11417.cpp: GCD
GCD.

P11428.cpp: Cubes
Find x, y, where N=x^3-y^3. Greedy OK because x^3 grows by 3n^2

P11450.cpp: Wedding shopping
small amount of possible prices => "dynamic programming" bool maintenance.

P11455.cpp: Behold my quadrangle
Trivial square/rectangle/none sides validity.

P11456.cpp: Trainsorting
LIS where you include last element.

P11461.cpp: Square Numbers
cmath sqrt

P11462.cpp: Age Sort
Radix sort ints 1 - 100.

P11463.cpp: Commandos
Dijkstra shortest path to all nodes. Modern.

P11466.cpp: Largest Prime Divisor
Prime sieve bitset and factorize up to 14 digit numbers.

P11470.cpp: Square Sums
Trivial.

P11475.cpp: Extend to Palindrome
Knuth Morris Pratt algorithm where search string is reverse of input.

P11479.cpp: Is this the easiest problem?
Triangle categorization. Sort 3 sides for easy categorization.

P11495.cpp: Bubbles and Buckets
Copy P10810.

P11496.cpp: Musical Loop
Trivial count peaks

P11498.cpp: Division of Nlogonia
Trivial

P11503.cpp: Virtual Friends
Circle combine in social networks

P11504.cpp: Dominos
Topo sort (topological sorting) in non-acyclic graph using Cormen/Tarjan.

P11057.cpp: Bender B. Rodríguez Problem
Trivial.

P11512.cpp: GATTACA
Suffix array construction. LCP in suffix array. Longest common prefix between adjacent entries of suffix array.

P11513.cpp: 9 Puzzle
Compute all solutions for 9 puzzle and store in map.

P11517.cpp: Exact Change
Use coins to cover amount. 

P11518.cpp: Dominos 2
Use P11504 to compute dominos that fall.

P11520.cpp: Fill the Square
Trivial.

P11530.cpp: SMS Typing
Trivial.

P11541.cpp: Decoding
Decode run length encoded strings.

P11547.cpp: Automatic Answer
simple calculation

P11559.cpp: Event Planning
Trivial.

P11565.cpp: Simple Equations
Second degree polynomial (axx+bx+c=0) solving.

P11572.cpp: Unique Snowflakes
Trivial.

P11577.cpp: Letter Frequency
scanf(%d\n") and gets to read input.

P11586.cpp: Train Tracks
Trivial read line as int, read chars in line.

P11588.cpp: Image Coding
Trivial.

P11597.cpp: Spanning Subtree
Count max spanning tree cover of complete graph.

P11608.cpp: No Problem
Simple sum

P11614.cpp: Etruscan Warriors Never Play Chess
Binary, exponential search.

P11616.cpp: Roman Numerals
Convert to and from roman.

P11624.cpp: Fire!
Simulate both fire growth and escape route from 2D grid walk.

P11626.java: Convex Hull
ch

P11631.cpp: Dark roads
MST in undirected graph using bad union-find. Like Bond, but without weights in union-find (simpler).

P11635.cpp: Hotel booking
Use Dijkstra multiple times from waves of hotels (sources).

P11636.cpp: Hello World!
Trivial counting.

P11650.cpp: Mirror Clock
Compute mirrored time of analogue clock.

P11661.cpp: Burger Time?
getchar and scanf to read ints and long lines.

P11677.cpp: Alarm Clock
Time diff.

P11679.cpp: Sub-prime
Can use methods to reduce cycles with positive reserves.

P11687.cpp: Digits
atoi(s.c_str())

P11689.cpp: Soda Surpler
Coca cola problem with variable cost.

P11710.cpp: Expensive Subway
Proper union-find where graph is build by adding edges sorted by weight.

P11713.cpp: Abstract Names
Trivial.

P11715.cpp: Car
Basic velocity and acceleration formulas.

P11716.cpp: Digital Fortress
Trivial string permutation.

P11723.cpp: Numbering Roads
Trivial.

P11727.cpp: Cost Cutting
Trivial sort 3 numbers, output middle

P11729.cpp: Commando War
Simple job sorting.

P11733.cpp: Airports
Union-find with path compression to compute minimal cost network.

P11734.cpp: Big Number of Teams will Solve This
Compare two string with spaces in one of them. scanf and gets.

P11743.cpp: Credit Check
Trivial credit card digit summation check.

P11747.cpp: Heavy Cycle Edges
Simple use of proper union find to detect cycles.

P11752.cpp: The Super Powers
unsigned long long, overflow detection, powers, square powers

P11764.cpp: Jumping Mario
Trivial count increasing and decreasing.

P11777.cpp: Automate the Grades
Trivial.

P11784.cpp: Escape
Simulate walks in rectangle. Easy.

P11799.cpp: Horror Dash
Trivial max.

P11800.cpp: Determine the Shape
Permutation handler on 4 ints, lines, points, linesCross, rightTurn, colinear, basic shape detection

P11804.cpp: Argentina
Trivial.

P11805.cpp: Bafana Bafana
Trivial.

P11827.cpp: Maximum GCD
Trivial.

P11831.cpp: Sticker Collector Robots
Walk in grid. Change grid during walk. Simple.

P11838.cpp: Come and Go
Find out if directed graph is clique.

P11849.cpp: CD
Trivial.

P11850.cpp: Alaska
Trivial.

P11854.cpp: Egypt
Trivial pythagoras check.

P11857.cpp: Driving Range
Minimax path (Copy from Bond). Connectivity and all pairs minimax path.

P11875.cpp: Brick Game
Trivial.

P11877.cpp: The Coca-Cola Store
The coca cola problem with borrowing.

P11878.cpp: Homework Checker
cin.getline for simle line parsing.

P11879.java: Multiple of 17
BigInteger divides check.

P11900.cpp: Boiled Eggs
Trivial.

P11917.cpp: Do Your Own Homework
Trivial.

P11933.cpp: Splitting Numbers
Check lowest bit using "1 == (1 & x)".

P11934.cpp: Magic Formula
Trivial.

P11936.cpp: The Lazy Lumberjacks
Trivial.

P11942.cpp: Lumberjack Sequencing
Trivial all increment or all decrement.

P11946.cpp: Code Number
Trivial.

P11953.cpp: Battleships
Simple walk on grid.

P11984.cpp: A Change in Therman Unit
Convert Fahrenheit to Celcius and back.

P11988.cpp: Broken Keyboard (a.k.a. Beiju Text)
Trivial.

P11991.cpp: Easy Problem from Rujia Liu?
Index of occurence of duplicate x of number y in array.

P11995.cpp: I Can Guess the Data Structure!
queue, stack, priority queue.

P12015.cpp: Google is Feeling Lucky
Trivial.

P12019.cpp: Doom's Day Algorithm
Compute day of week in given non-leap year.

P12032.cpp: The Monkey and the Ladder
Simple linear walk while updating max jump.

P12086.cpp: Potentiometers
Full binary tree construction and traversal for handling updates and range queries.

P12087.cpp: Collecting Marbles
Sum-arrays.

P12100.cpp: Printer Queue
deque, std::sort on int, printer job simulation with priorities.

P12149.cpp: Feynman
Trivial.

P12157.cpp: Tariff Plan
Trivial.

P12250.cpp: Language Detection
Trivial string compare equals

P12279.cpp: Emoogle Balance
Trivial.

P12289.cpp: One-Two-Three
std::cin >> int >> char[].

P12342.cpp: Tax Calculator
Trivial.

P12356.cpp: Army buddies
Trivial.

P12372.cpp: Packing for Holiday
Trivial.

P12403.cpp: Save Setu
Trivial.

P12405.cpp: Scarecrow
Trivial.

P12455.cpp: Bars
Coin sum problem: Can bars of given lengths sum to X?

P12459.java: Bee's ancestors
BigInteger Fibonacci.

P12468.cpp: Zapping
Trivial.

P12478.cpp: Hardest Problem Ever (Easy)
Trivial.

P12502.cpp: Three Families
Trivial.

P12503.cpp: Robot Instructions
std::cin to both ints and char arrays.

P12527.java: Different Digits
Use Scanner(System.in) to get ints.

P12531.cpp: Hours and Minutes
Trivial.

P12532.cpp: Interval Product
Maintain binary tree in order to support range queries.

P12541.cpp: Birthdates
Trivial.

P12554.cpp: A Special "Happy Birthday" Song!!!
Constant string array in c++.

P12577.cpp: Hajj-e-Akbar
Trivial string compare.

P12578.cpp: 10:6:2
Trivial areas. M_PI

P12602.cpp: Nice Licence Plates
Trivial.

P12626.cpp: I love pizza
Trivial.

P12646.cpp: Zero or One
Trivial.

P12700.cpp: Banglawash
Trivial, but be ware of missing \n in sample output!

P12704.cpp: Little Masters
Trivial.

P12791.cpp: Lap
Car race overlapping calculation, reead line as two ints.

P12894.cpp: Perfect Flag
Trivial dimensions check.

P12952.cpp: Tri-du
Trivial, read line as two ints.

P13034.cpp: Solve Everything :-)
Trivial 0 check.

--------------------------------------------------------------
Hackerrank:

Pbattleship1p: Battleship 1 Player
Compute most likely square occupied by a given battleship.


--------------------------------------------------------------
Matrix questions (since there are not enough of these in UVa):

1)
Given an n x n matrix A(i,j) of integers, find maximum value A(c,d) - A(a,b) over all choices of indexes such that both c > a and d > b.
Required complexity: O(n^2)

2)
Given an NxM (N rows and M columns) integer matrix with non-negative values (0..MAX_INT inclusive). What is the maximum sum from going top left (0, 0) to bottom right (N-1, M-1) ? The condition is that when you're at point (p, q), you can only move to either right (p, q+1) or down (p+1, q).

Expected time complexity O(N*M)
Expected space complexity O(N+M)

From the space complexity it looks like there is a DP solution, but I couldn't figure it out.

3)
"Min(Max elements rows) not less than Max(Min of columns)"
can you tell me whether above statement ist true or false..
if it true, then tell me solutoin.
if it false, then tell me example

4)
Given an n-by-n matrix of 0's and 1's where all 1's in each row come before all 0's, find the most efficient way to return the row with the maximum number of 0's.

5)
given a number n... print a spiral matrix in O(1) space example if n=5 the op should be:

25 24 23 22 21
10 09 08 07 20
11 02 01 06 19
12 03 04 05 18
13 14 15 16 17

The question may appear trivial but its not...u hav to print in O(1) space

6)
given a matrix pxq
You start from top left and have to reach the bottom right. Can only traverse right or bottom
How many ways are there to reach at the bottom right?

